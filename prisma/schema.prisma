generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model guest {
  id                String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  insurance_plan_id String       @db.Uuid
  user_id           String       @db.Uuid
  organization_id   String       @db.Uuid
  appointment_id    String       @db.Uuid
  medical_record_id String       @db.Uuid
  created_at        DateTime     @default(now()) @db.Timestamp(6)
  updated_at        DateTime     @default(now()) @db.Timestamp(6)
  organization      organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user              user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model healthcare_provider {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  specialization  String       @db.VarChar(255)
  qualification   String       @db.VarChar(255)
  experience      Int
  user_id         String       @db.Uuid
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user            user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model insurance_provider {
  id               String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_name     String       @db.VarChar(255)
  policy_name      String       @db.VarChar(255)
  coverage_details String       @db.VarChar(255)
  user_id          String       @db.Uuid
  organization_id  String       @db.Uuid
  created_at       DateTime     @default(now()) @db.Timestamp(6)
  updated_at       DateTime     @default(now()) @db.Timestamp(6)
  organization     organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user             user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model medical_staff {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  designation     String       @db.VarChar(255)
  qualification   String       @db.VarChar(255)
  experience      Int
  user_id         String       @db.Uuid
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user            user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model organization {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description         String?               @db.VarChar(255)
  name                String                @db.VarChar(255)
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @db.Timestamp(6)
  user_id             String                @db.Uuid
  tenant_id           String                @db.VarChar(255)
  guest               guest[]
  healthcare_provider healthcare_provider[]
  insurance_provider  insurance_provider[]
  medical_staff       medical_staff[]
  user                user                  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email               String                @unique @db.VarChar(255)
  firstName           String?               @db.VarChar(255)
  lastName            String?               @db.VarChar(255)
  roq_user_id         String                @db.VarChar(255)
  tenant_id           String                @db.VarChar(255)
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @db.Timestamp(6)
  guest               guest[]
  healthcare_provider healthcare_provider[]
  insurance_provider  insurance_provider[]
  medical_staff       medical_staff[]
  organization        organization[]
}
